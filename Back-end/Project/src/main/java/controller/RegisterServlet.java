package controller;

import Model.User;
import DAO.UserDAO;

import Utils.EmailUtility;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Random;

@WebServlet(name = "RegisterServlet", urlPatterns = {"/register"})
public class RegisterServlet extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        request.getRequestDispatcher("register.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // L·∫•y d·ªØ li·ªáu t·ª´ form ƒëƒÉng k√Ω
        String username = request.getParameter("username");
        String email = request.getParameter("email");
        String password = request.getParameter("password");
        String confirmPassword = request.getParameter("confirmPassword");
        String fullName = request.getParameter("fullName");
        String phone = request.getParameter("phone");
        String address = request.getParameter("address");

        // Ki·ªÉm tra m·∫≠t kh·∫©u c√≥ kh·ªõp kh√¥ng
        if (!password.equals(confirmPassword)) {
            request.setAttribute("error", "Passwords do not match!");
            request.getRequestDispatcher("register.jsp").forward(request, response);
            return;
        }

        // Ki·ªÉm tra ƒë·ªô m·∫°nh c·ªßa m·∫≠t kh·∫©u
        if (!password.matches("^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$")) {
            request.setAttribute("error", "Password must be at least 8 characters long and include both letters and numbers!");
            request.getRequestDispatcher("register.jsp").forward(request, response);
            return;
        }

        UserDAO userDAO = new UserDAO();
        try {
            // Ki·ªÉm tra xem username ho·∫∑c email ƒë√£ t·ªìn t·∫°i ch∆∞a
            if (userDAO.checkUserExists(username, email)) {
                request.setAttribute("error", "Username or email already exists!");
                request.getRequestDispatcher("register.jsp").forward(request, response);
                return;
            }

            // T·∫°o m√£ OTP (6 ch·ªØ s·ªë)
            Random random = new Random();
            int otp = 100000 + random.nextInt(900000);

            // L∆∞u OTP v√† th√¥ng tin user v√†o session
            HttpSession session = request.getSession();
            session.setAttribute("otp", otp);
            session.setAttribute("username", username);
            session.setAttribute("password", password); // C√¢n nh·∫Øc m√£ h√≥a m·∫≠t kh·∫©u tr∆∞·ªõc khi l∆∞u
            session.setAttribute("email", email);
            session.setAttribute("fullName", fullName);
            session.setAttribute("phone", phone);
            session.setAttribute("address", address);

            // G·ª≠i email ch·ª©a OTP
            String subject = "üêæ X√°c Th·ª±c ƒêƒÉng K√Ω - PawHouse üêæ";

            String content = "<html><body style='font-family: Arial, sans-serif; background-color: #FFF3CD; padding: 20px;'>"
                    + "<div style='max-width: 500px; margin: auto; background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); text-align: center;'>"
                    + "<h2 style='color: #FF8000;'>üê∂ X√°c Th·ª±c ƒêƒÉng K√Ω PawHouse üê±</h2>"
                    + "<p style='font-size: 16px; color: #333; margin-bottom: 10px;'>Xin ch√†o,</p>"
                    + "<p style='font-size: 16px; color: #333;'>M√£ OTP c·ªßa b·∫°n l√†:</p>"
                    + "<p style='font-size: 24px; font-weight: bold; color: #FF5733; background-color: #fff; padding: 15px; display: inline-block; border-radius: 8px; border: 2px dashed #FF5733; letter-spacing: 3px;'>"
                    + otp + "</p>"
                    + "<p style='font-size: 16px; color: #333; margin-top: 20px;'>Vui l√≤ng nh·∫≠p m√£ n√†y ƒë·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω t√†i kho·∫£n PawHouse.</p>"
                    + "<p style='font-size: 14px; color: #666;'>L∆∞u √Ω: M√£ OTP c√≥ hi·ªáu l·ª±c trong <b>5 ph√∫t</b>.</p>"
                    + "<p style='margin-top: 20px; font-size: 14px; color: #666;'>C·∫£m ∆°n b·∫°n ƒë√£ tham gia c·ªông ƒë·ªìng PawHouse! üêæ</p>"
//                    + "<a href='http://localhost:8080/index.jsp' style='display: inline-block; margin-top: 15px; padding: 10px 20px; font-size: 16px; color: white; background-color: #FF8000; text-decoration: none; border-radius: 5px;'>X√°c Th·ª±c Ngay</a>"
                    + "<hr style='border: 1px solid #FF8000; margin-top: 20px;'>"
                    + "<p style='font-size: 12px; color: #999;'>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëƒÉng k√Ω, vui l√≤ng b·ªè qua email n√†y.</p>"
                    + "</div>"
                    + "</body></html>";

            EmailUtility.sendEmail(email, subject, content);

            // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang nh·∫≠p OTP
            response.sendRedirect("verifyOTP.jsp");

        } catch (SQLException e) {
            request.setAttribute("error", "Database error occurred: " + e.getMessage());
            request.getRequestDispatcher("register.jsp").forward(request, response);
        }
    }
}
