package controller;

import DAO.PetDAO;
import Model.Pet;
import Model.PetCategories;
import Model.User;
import java.io.File;
import java.io.IOException;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import jakarta.servlet.http.Part;
import java.util.List;

@WebServlet(name = "AddPetServlet", urlPatterns = {"/AddPetServlet"})
@MultipartConfig(
        fileSizeThreshold = 1024 * 1024 * 2, // 2MB
        maxFileSize = 1024 * 1024 * 10, // 10MB
        maxRequestSize = 1024 * 1024 * 50 // 50MB
)
public class AddPetServlet extends HttpServlet {

    private static final String UPLOAD_DIRECTORY = "imgs/pet";  // Th∆∞ m·ª•c l∆∞u ·∫£nh

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        System.out.println("üì• AddPetServlet: Received request!");

        HttpSession session = request.getSession();
        User user = (User) session.getAttribute("loggedInUser");

        if (user == null) {
            System.out.println("‚ö†Ô∏è User is not logged in!");
            response.sendRedirect("login.jsp");
            return;
        }

        try {
            // L·∫•y d·ªØ li·ªáu t·ª´ form
            String petName = request.getParameter("petName");
            String species = request.getParameter("species");
            String breed = request.getParameter("breed");
            String gender = request.getParameter("gender");
            String adoptionStatus = request.getParameter("adoptionStatus");

            // Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o tr√°nh l·ªói null
            petName = (petName != null && !petName.trim().isEmpty()) ? petName.trim() : "Kh√¥ng c√≥ t√™n";
            species = (species != null && !species.trim().isEmpty()) ? species.trim().toLowerCase() : "Kh√¥ng x√°c ƒë·ªãnh";
            breed = (breed != null && !breed.trim().isEmpty()) ? breed.trim() : "Kh√¥ng x√°c ƒë·ªãnh";
            gender = (gender != null && !gender.trim().isEmpty()) ? gender : "Kh√¥ng r√µ";
            adoptionStatus = (adoptionStatus != null) ? adoptionStatus : "Ch∆∞a nh·∫≠n nu√¥i";

            // X√°c ƒë·ªãnh categoryID d·ª±a tr√™n species
            int categoryId;
            switch (species) {
                case "ch√≥":
                    categoryId = 1;
                    break;
                case "m√®o":
                    categoryId = 2;
                    break;
                case "b√≤ s√°t":
                    categoryId = 3;
                    break;
                case "g·∫∑m nh·∫•m":
                    categoryId = 4;
                    break;
                default:
                    categoryId = 5; // M·∫∑c ƒë·ªãnh n·∫øu kh√¥ng kh·ªõp danh m·ª•c
            }

            // Ki·ªÉm tra v√† chuy·ªÉn ƒë·ªïi age
            int age = 1; // Gi√° tr·ªã m·∫∑c ƒë·ªãnh
            try {
                String ageParam = request.getParameter("age");
                if (ageParam != null && !ageParam.isEmpty()) {
                    age = Integer.parseInt(ageParam);
                }
            } catch (NumberFormatException e) {
                System.out.println("‚ö†Ô∏è L·ªói chuy·ªÉn ƒë·ªïi tu·ªïi, ƒë·∫∑t gi√° tr·ªã m·∫∑c ƒë·ªãnh l√† 1.");
            }

            // T·∫°o ƒë·ªëi t∆∞·ª£ng PetCategories
            PetCategories category = new PetCategories(categoryId, "Lo√†i ƒë∆∞·ª£c ch·ªçn", "T·ª± ƒë·ªông nh·∫≠n d·∫°ng");

            // X·ª≠ l√Ω upload ·∫£nh v√†o th∆∞ m·ª•c `imgs/pet`
            Part filePart = request.getPart("petImage");
            String fileName = "imgs/pet/default-pet.jpg"; // ·∫¢nh m·∫∑c ƒë·ªãnh

            if (filePart != null && filePart.getSize() > 0) {
                fileName = filePart.getSubmittedFileName();
                String uploadPath = getServletContext().getRealPath("") + File.separator + UPLOAD_DIRECTORY;
                File uploadDir = new File(uploadPath);
                if (!uploadDir.exists()) {
                    uploadDir.mkdirs(); // T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
                }
                String filePath = uploadPath + File.separator + fileName;
                filePart.write(filePath);
                fileName = UPLOAD_DIRECTORY + "/" + fileName; // L∆∞u ƒë∆∞·ªùng d·∫´n t∆∞∆°ng ƒë·ªëi
            }

            // G·ªçi DAO ƒë·ªÉ l∆∞u v√†o database
            PetDAO petDAO = new PetDAO();
            Pet pet = new Pet(0, category, petName, species, breed, age, gender, fileName, adoptionStatus, user);
            boolean insertSuccess = petDAO.insertPet(pet);

            if (insertSuccess) {
                System.out.println("üéâ Th√™m th√∫ c∆∞ng th√†nh c√¥ng!");

                // C·∫≠p nh·∫≠t danh s√°ch th√∫ c∆∞ng sau khi th√™m
                List<Pet> updatedPetList = petDAO.getPetsByUserId(user.getUserID());
                request.setAttribute("myPets", updatedPetList);

                request.getRequestDispatcher("myPet.jsp").forward(request, response);
            } else {
                System.out.println("‚ùå Th√™m th√∫ c∆∞ng th·∫•t b·∫°i!");
                response.sendRedirect("addPet.jsp?error=true");
            }

        } catch (Exception e) {

            e.printStackTrace();
            response.sendRedirect("addPet.jsp?error=true");
        }
    }
}
